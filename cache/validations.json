{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "de67b7fac2c65b5a70b694e525bb8d1e946ba3ba7500c4eae3a1ff50f2e0f8be",
          "withoutMetadata": "df21e7d42fad0aa5dbb1cb91da33bdb76b0440106a069d1a93e58bd9bb031957",
          "linkedWithoutMetadata": "df21e7d42fad0aa5dbb1cb91da33bdb76b0440106a069d1a93e58bd9bb031957"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMintedIds()",
          "mintClaim(uint256)",
          "exists(uint256)",
          "getClaimDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3631_storage)",
              "src": "contracts/Claims.sol:35"
            },
            {
              "contract": "Claims",
              "label": "mintedIds",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/Claims.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3631_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3631_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3615_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3615_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4146_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4146_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4146_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Mining": {
        "src": "contracts/Mining.sol:11",
        "version": {
          "withMetadata": "551b77a5aa837e41c1dad95339bb3a61699b73de4a685dc50faa85a2e70f56ff",
          "withoutMetadata": "1c1dd6551d396c819c25242b001017eb62d2b9727f1f27abca8c9e15e9898940",
          "linkedWithoutMetadata": "1c1dd6551d396c819c25242b001017eb62d2b9727f1f27abca8c9e15e9898940"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "mine(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Mining",
            "src": "contracts/Mining.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Mining",
              "label": "itemsContract",
              "type": "t_contract(Items)4335",
              "src": "contracts/Mining.sol:12"
            },
            {
              "contract": "Mining",
              "label": "toolsContract",
              "type": "t_contract(Tools)5176",
              "src": "contracts/Mining.sol:13"
            },
            {
              "contract": "Mining",
              "label": "claimsContract",
              "type": "t_contract(Claims)3973",
              "src": "contracts/Mining.sol:14"
            },
            {
              "contract": "Mining",
              "label": "goldContract",
              "type": "t_contract(Gold)4121",
              "src": "contracts/Mining.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4335": {
              "label": "contract Items"
            },
            "t_contract(Tools)5176": {
              "label": "contract Tools"
            },
            "t_contract(Claims)3973": {
              "label": "contract Claims"
            },
            "t_contract(Gold)4121": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "withoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "linkedWithoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "exists(uint256)",
          "getToolDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4845_storage)",
              "src": "contracts/Tools.sol:40"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4859_storage)",
              "src": "contracts/Tools.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4845_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4845_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4859_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4859_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4838_storage"
                }
              ]
            },
            "t_struct(Bonuses)4838_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "4b253b1c052a8448e01ae8f0555bee377ae2650530652bb29f6f2434d7d270b2",
          "withoutMetadata": "2aae47a2dbdcd371af31217189069bdc0f48952ba425b471b7eb962a4f464090",
          "linkedWithoutMetadata": "2aae47a2dbdcd371af31217189069bdc0f48952ba425b471b7eb962a4f464090"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMintedIds()",
          "mintClaim(uint256)",
          "exists(uint256)",
          "getClaimDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3631_storage)",
              "src": "contracts/Claims.sol:35"
            },
            {
              "contract": "Claims",
              "label": "mintedIds",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/Claims.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3631_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3631_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3615_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3615_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4145_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4145_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4145_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Mining": {
        "src": "contracts/Mining.sol:11",
        "version": {
          "withMetadata": "92aef33c5164a6d86f06d5a6c51fcbcc72a5660f67535dd0774e2f2dc8b56d8b",
          "withoutMetadata": "1c1dd6551d396c819c25242b001017eb62d2b9727f1f27abca8c9e15e9898940",
          "linkedWithoutMetadata": "1c1dd6551d396c819c25242b001017eb62d2b9727f1f27abca8c9e15e9898940"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "mine(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Mining",
            "src": "contracts/Mining.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Mining",
              "label": "itemsContract",
              "type": "t_contract(Items)4334",
              "src": "contracts/Mining.sol:12"
            },
            {
              "contract": "Mining",
              "label": "toolsContract",
              "type": "t_contract(Tools)5175",
              "src": "contracts/Mining.sol:13"
            },
            {
              "contract": "Mining",
              "label": "claimsContract",
              "type": "t_contract(Claims)3972",
              "src": "contracts/Mining.sol:14"
            },
            {
              "contract": "Mining",
              "label": "goldContract",
              "type": "t_contract(Gold)4120",
              "src": "contracts/Mining.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4334": {
              "label": "contract Items"
            },
            "t_contract(Tools)5175": {
              "label": "contract Tools"
            },
            "t_contract(Claims)3972": {
              "label": "contract Claims"
            },
            "t_contract(Gold)4120": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "withoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "linkedWithoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "exists(uint256)",
          "getToolDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4844_storage)",
              "src": "contracts/Tools.sol:40"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4858_storage)",
              "src": "contracts/Tools.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4844_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4844_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4858_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4858_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4837_storage"
                }
              ]
            },
            "t_struct(Bonuses)4837_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "0830a4af857d1c8068a391e6f9468e9ed22e928be355f320e88777323b2d8b05",
          "withoutMetadata": "5472e2d0aa05f5ea4a305eebfb9462fbd24cbda4dadb4bc82e64d5500acdead1",
          "linkedWithoutMetadata": "5472e2d0aa05f5ea4a305eebfb9462fbd24cbda4dadb4bc82e64d5500acdead1"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "mintClaim(uint256)",
          "exists(uint256)",
          "getClaimDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3631_storage)",
              "src": "contracts/Claims.sol:35"
            },
            {
              "contract": "Claims",
              "label": "mintedIds",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/Claims.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3631_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3631_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3615_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3615_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4136_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4136_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4136_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Mining": {
        "src": "contracts/Mining.sol:11",
        "version": {
          "withMetadata": "535c4a41f79ea4e59d1a3b87c671259a0308de86b30e48e7747380ca2e38e75c",
          "withoutMetadata": "1c1dd6551d396c819c25242b001017eb62d2b9727f1f27abca8c9e15e9898940",
          "linkedWithoutMetadata": "1c1dd6551d396c819c25242b001017eb62d2b9727f1f27abca8c9e15e9898940"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "mine(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Mining",
            "src": "contracts/Mining.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Mining",
              "label": "itemsContract",
              "type": "t_contract(Items)4325",
              "src": "contracts/Mining.sol:12"
            },
            {
              "contract": "Mining",
              "label": "toolsContract",
              "type": "t_contract(Tools)5166",
              "src": "contracts/Mining.sol:13"
            },
            {
              "contract": "Mining",
              "label": "claimsContract",
              "type": "t_contract(Claims)3963",
              "src": "contracts/Mining.sol:14"
            },
            {
              "contract": "Mining",
              "label": "goldContract",
              "type": "t_contract(Gold)4111",
              "src": "contracts/Mining.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4325": {
              "label": "contract Items"
            },
            "t_contract(Tools)5166": {
              "label": "contract Tools"
            },
            "t_contract(Claims)3963": {
              "label": "contract Claims"
            },
            "t_contract(Gold)4111": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "withoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "linkedWithoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "exists(uint256)",
          "getToolDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4835_storage)",
              "src": "contracts/Tools.sol:40"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4849_storage)",
              "src": "contracts/Tools.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4835_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4835_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4849_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4849_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4828_storage"
                }
              ]
            },
            "t_struct(Bonuses)4828_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "f6fc48243e396a4bd124e5e55cfd5877398682b5311f6827ada761d27c1b7a15",
          "withoutMetadata": "6af13e7b42eaaf0bded9e4d74582f46cd3bf3ff284a1e181040859f318baffcc",
          "linkedWithoutMetadata": "6af13e7b42eaaf0bded9e4d74582f46cd3bf3ff284a1e181040859f318baffcc"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "mintClaim(uint256)",
          "exists(uint256)",
          "getClaimDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3631_storage)",
              "src": "contracts/Claims.sol:35"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3631_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3631_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3615_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3615_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4130_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4130_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4130_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Mining": {
        "src": "contracts/Mining.sol:11",
        "version": {
          "withMetadata": "75cf1796772df88da010fda93ce1043bae610537366f3817ac8b7ffe752aeee1",
          "withoutMetadata": "1c1dd6551d396c819c25242b001017eb62d2b9727f1f27abca8c9e15e9898940",
          "linkedWithoutMetadata": "1c1dd6551d396c819c25242b001017eb62d2b9727f1f27abca8c9e15e9898940"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "mine(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Mining",
            "src": "contracts/Mining.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Mining",
              "label": "itemsContract",
              "type": "t_contract(Items)4319",
              "src": "contracts/Mining.sol:12"
            },
            {
              "contract": "Mining",
              "label": "toolsContract",
              "type": "t_contract(Tools)5160",
              "src": "contracts/Mining.sol:13"
            },
            {
              "contract": "Mining",
              "label": "claimsContract",
              "type": "t_contract(Claims)3957",
              "src": "contracts/Mining.sol:14"
            },
            {
              "contract": "Mining",
              "label": "goldContract",
              "type": "t_contract(Gold)4105",
              "src": "contracts/Mining.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4319": {
              "label": "contract Items"
            },
            "t_contract(Tools)5160": {
              "label": "contract Tools"
            },
            "t_contract(Claims)3957": {
              "label": "contract Claims"
            },
            "t_contract(Gold)4105": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "withoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "linkedWithoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "exists(uint256)",
          "getToolDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4829_storage)",
              "src": "contracts/Tools.sol:40"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4843_storage)",
              "src": "contracts/Tools.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4829_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4829_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4843_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4843_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4822_storage"
                }
              ]
            },
            "t_struct(Bonuses)4822_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "f6fc48243e396a4bd124e5e55cfd5877398682b5311f6827ada761d27c1b7a15",
          "withoutMetadata": "6af13e7b42eaaf0bded9e4d74582f46cd3bf3ff284a1e181040859f318baffcc",
          "linkedWithoutMetadata": "6af13e7b42eaaf0bded9e4d74582f46cd3bf3ff284a1e181040859f318baffcc"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "mintClaim(uint256)",
          "exists(uint256)",
          "getClaimDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3631_storage)",
              "src": "contracts/Claims.sol:35"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3631_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3631_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3615_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3615_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4130_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4130_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4130_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Mining": {
        "src": "contracts/Mining.sol:11",
        "version": {
          "withMetadata": "aa93b450b09e8fb43699055a1c77befad9b8e8152cfa3d279d53b6672a1d856a",
          "withoutMetadata": "6d9d80d2c56cb78986d4b2d910a8f9ac1b3c4b020123d8a6b380ca85de2a4333",
          "linkedWithoutMetadata": "6d9d80d2c56cb78986d4b2d910a8f9ac1b3c4b020123d8a6b380ca85de2a4333"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "mine(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Mining",
            "src": "contracts/Mining.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Mining",
              "label": "itemsContract",
              "type": "t_contract(Items)4319",
              "src": "contracts/Mining.sol:12"
            },
            {
              "contract": "Mining",
              "label": "toolsContract",
              "type": "t_contract(Tools)5156",
              "src": "contracts/Mining.sol:13"
            },
            {
              "contract": "Mining",
              "label": "claimsContract",
              "type": "t_contract(Claims)3957",
              "src": "contracts/Mining.sol:14"
            },
            {
              "contract": "Mining",
              "label": "goldContract",
              "type": "t_contract(Gold)4105",
              "src": "contracts/Mining.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4319": {
              "label": "contract Items"
            },
            "t_contract(Tools)5156": {
              "label": "contract Tools"
            },
            "t_contract(Claims)3957": {
              "label": "contract Claims"
            },
            "t_contract(Gold)4105": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "withoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "linkedWithoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "exists(uint256)",
          "getToolDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4825_storage)",
              "src": "contracts/Tools.sol:40"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4839_storage)",
              "src": "contracts/Tools.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4825_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4825_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4839_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4839_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4818_storage"
                }
              ]
            },
            "t_struct(Bonuses)4818_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "3b525a6406b12e1f527e366faf0dc2fa90e917bb7790cbdfc598e765658c62d2",
          "withoutMetadata": "604093a1e71e56854d7cfc21058fe0444cdcab3ef4cf219cadbd3402d2ae1be4",
          "linkedWithoutMetadata": "604093a1e71e56854d7cfc21058fe0444cdcab3ef4cf219cadbd3402d2ae1be4"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "mintClaim(uint256)",
          "exists(uint256)",
          "getClaimDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3631_storage)",
              "src": "contracts/Claims.sol:35"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3631_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3631_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3615_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3615_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4121_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4121_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4121_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Mining": {
        "src": "contracts/Mining.sol:11",
        "version": {
          "withMetadata": "db1631a59ddd6c70de37fea5211555c1b513032f9dfa009214e73acf825453b7",
          "withoutMetadata": "d5b2724c8d59880f7f80b8b0999c4d59f4ce9cf75522ffc00f1d4f8bd4326954",
          "linkedWithoutMetadata": "d5b2724c8d59880f7f80b8b0999c4d59f4ce9cf75522ffc00f1d4f8bd4326954"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "mine(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Mining",
            "src": "contracts/Mining.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Mining",
              "label": "itemsContract",
              "type": "t_contract(Items)4310",
              "src": "contracts/Mining.sol:12"
            },
            {
              "contract": "Mining",
              "label": "toolsContract",
              "type": "t_contract(Tools)5132",
              "src": "contracts/Mining.sol:13"
            },
            {
              "contract": "Mining",
              "label": "claimsContract",
              "type": "t_contract(Claims)3948",
              "src": "contracts/Mining.sol:14"
            },
            {
              "contract": "Mining",
              "label": "goldContract",
              "type": "t_contract(Gold)4096",
              "src": "contracts/Mining.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4310": {
              "label": "contract Items"
            },
            "t_contract(Tools)5132": {
              "label": "contract Tools"
            },
            "t_contract(Claims)3948": {
              "label": "contract Claims"
            },
            "t_contract(Gold)4096": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "withoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "linkedWithoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "exists(uint256)",
          "getToolDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4801_storage)",
              "src": "contracts/Tools.sol:40"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4815_storage)",
              "src": "contracts/Tools.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4801_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4801_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4815_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4815_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4794_storage"
                }
              ]
            },
            "t_struct(Bonuses)4794_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "3b525a6406b12e1f527e366faf0dc2fa90e917bb7790cbdfc598e765658c62d2",
          "withoutMetadata": "604093a1e71e56854d7cfc21058fe0444cdcab3ef4cf219cadbd3402d2ae1be4",
          "linkedWithoutMetadata": "604093a1e71e56854d7cfc21058fe0444cdcab3ef4cf219cadbd3402d2ae1be4"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "mintClaim(uint256)",
          "exists(uint256)",
          "getClaimDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3631_storage)",
              "src": "contracts/Claims.sol:35"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3631_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3631_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3615_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3615_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "80101f1c28c236c79455d70c52f0daaa23ad35fbc1b696c29f4915aacfeff6ae",
          "withoutMetadata": "65e7dd9b40e531370e1e856aef9bb5a728e326455b9e74018fd601466d56c46d",
          "linkedWithoutMetadata": "65e7dd9b40e531370e1e856aef9bb5a728e326455b9e74018fd601466d56c46d"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256,uint8)",
          "updateRecipe(string,uint256,uint256,uint256,uint256,uint8)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)4743",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)5581",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3986_storage)",
              "src": "contracts/Crafting.sol:31"
            }
          ],
          "types": {
            "t_contract(Items)4743": {
              "label": "contract Items"
            },
            "t_contract(Tools)5581": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3986_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3986_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_enum(OutputTokenType)3989"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_enum(OutputTokenType)3989": {
              "label": "enum Crafting.OutputTokenType",
              "members": [
                "Item",
                "Tool"
              ]
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "49b2bee0cc93b9ac0305e317b5789ed49647d07355b4e4acefc5307189870e23",
          "withoutMetadata": "ffd51474b7f2a846a0b614e3e14ff0225b309bc49c8b2e5dc516d0273e0d1f22",
          "linkedWithoutMetadata": "ffd51474b7f2a846a0b614e3e14ff0225b309bc49c8b2e5dc516d0273e0d1f22"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4743",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)5581",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4529",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4743": {
              "label": "contract Items"
            },
            "t_contract(Tools)5581": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4529": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4554_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4554_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4554_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Mining": {
        "src": "contracts/Mining.sol:11",
        "version": {
          "withMetadata": "161d1e5d9c8225df986adcb32fc3202f2dcbbd143f2a5086574fc95c4a21f105",
          "withoutMetadata": "f9df458a9d2caabf97227197b7dd274484d5edff1ff26a05cce39b94924de9a2",
          "linkedWithoutMetadata": "f9df458a9d2caabf97227197b7dd274484d5edff1ff26a05cce39b94924de9a2"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "mine(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Mining",
            "src": "contracts/Mining.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Mining",
              "label": "itemsContract",
              "type": "t_contract(Items)4743",
              "src": "contracts/Mining.sol:12"
            },
            {
              "contract": "Mining",
              "label": "toolsContract",
              "type": "t_contract(Tools)5581",
              "src": "contracts/Mining.sol:13"
            },
            {
              "contract": "Mining",
              "label": "claimsContract",
              "type": "t_contract(Claims)3948",
              "src": "contracts/Mining.sol:14"
            },
            {
              "contract": "Mining",
              "label": "goldContract",
              "type": "t_contract(Gold)4529",
              "src": "contracts/Mining.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4743": {
              "label": "contract Items"
            },
            "t_contract(Tools)5581": {
              "label": "contract Tools"
            },
            "t_contract(Claims)3948": {
              "label": "contract Claims"
            },
            "t_contract(Gold)4529": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "withoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba",
          "linkedWithoutMetadata": "7ab99ca3cbc5d1567cf5989afb9552c8c4bfac716a0ec8e3e0aa4ad657d240ba"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "exists(uint256)",
          "getToolDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)5250_storage)",
              "src": "contracts/Tools.sol:40"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)5264_storage)",
              "src": "contracts/Tools.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)5250_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)5250_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)5264_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)5264_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)5243_storage"
                }
              ]
            },
            "t_struct(Bonuses)5243_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "5298b01f9ca55360626b5e5f684824c960a6e97e40e55b46ce9afb82ffb6fd15",
          "withoutMetadata": "4c528a37a2e51f16be48151184a843c3ac0308b17ff26eb7422a7081afdd6bbe",
          "linkedWithoutMetadata": "4c528a37a2e51f16be48151184a843c3ac0308b17ff26eb7422a7081afdd6bbe"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "mintClaim(uint256)",
          "exists(uint256)",
          "getClaimDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3631_storage)",
              "src": "contracts/Claims.sol:35"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3631_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3631_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3615_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3615_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4119_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4119_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4119_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Mining": {
        "src": "contracts/Mining.sol:11",
        "version": {
          "withMetadata": "2584394f78b348e0d8b3fe6bb8c57e9d1d251bd2ce23c272fb9581e4e260e217",
          "withoutMetadata": "6bd22a357a2c4e7e79b2ddf489e31008b63eff41417ef371ff409f518a38f235",
          "linkedWithoutMetadata": "6bd22a357a2c4e7e79b2ddf489e31008b63eff41417ef371ff409f518a38f235"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "mine(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Mining",
            "src": "contracts/Mining.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Mining",
              "label": "itemsContract",
              "type": "t_contract(Items)4308",
              "src": "contracts/Mining.sol:12"
            },
            {
              "contract": "Mining",
              "label": "toolsContract",
              "type": "t_contract(Tools)5142",
              "src": "contracts/Mining.sol:13"
            },
            {
              "contract": "Mining",
              "label": "claimsContract",
              "type": "t_contract(Claims)3946",
              "src": "contracts/Mining.sol:14"
            },
            {
              "contract": "Mining",
              "label": "goldContract",
              "type": "t_contract(Gold)4094",
              "src": "contracts/Mining.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4308": {
              "label": "contract Items"
            },
            "t_contract(Tools)5142": {
              "label": "contract Tools"
            },
            "t_contract(Claims)3946": {
              "label": "contract Claims"
            },
            "t_contract(Gold)4094": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "226d642b4451d87f8929d53600f8fe42958bf41ff50193aed76d7455cf7333a7",
          "withoutMetadata": "226d642b4451d87f8929d53600f8fe42958bf41ff50193aed76d7455cf7333a7",
          "linkedWithoutMetadata": "226d642b4451d87f8929d53600f8fe42958bf41ff50193aed76d7455cf7333a7"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "exists(uint256)",
          "getToolDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4813_storage)",
              "src": "contracts/Tools.sol:40"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4827_storage)",
              "src": "contracts/Tools.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4813_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4813_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4827_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4827_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4806_storage"
                }
              ]
            },
            "t_struct(Bonuses)4806_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "5298b01f9ca55360626b5e5f684824c960a6e97e40e55b46ce9afb82ffb6fd15",
          "withoutMetadata": "4c528a37a2e51f16be48151184a843c3ac0308b17ff26eb7422a7081afdd6bbe",
          "linkedWithoutMetadata": "4c528a37a2e51f16be48151184a843c3ac0308b17ff26eb7422a7081afdd6bbe"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "mintClaim(uint256)",
          "exists(uint256)",
          "getClaimDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3631_storage)",
              "src": "contracts/Claims.sol:35"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3631_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3631_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3615_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3615_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "9637c19b90c69ba5575d4682cbe285296a6b5e43f858bfa69ad7bd67da06869c",
          "withoutMetadata": "65e7dd9b40e531370e1e856aef9bb5a728e326455b9e74018fd601466d56c46d",
          "linkedWithoutMetadata": "65e7dd9b40e531370e1e856aef9bb5a728e326455b9e74018fd601466d56c46d"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256,uint8)",
          "updateRecipe(string,uint256,uint256,uint256,uint256,uint8)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)4741",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)5576",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3984_storage)",
              "src": "contracts/Crafting.sol:31"
            }
          ],
          "types": {
            "t_contract(Items)4741": {
              "label": "contract Items"
            },
            "t_contract(Tools)5576": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3984_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3984_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_enum(OutputTokenType)3987"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_enum(OutputTokenType)3987": {
              "label": "enum Crafting.OutputTokenType",
              "members": [
                "Item",
                "Tool"
              ]
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "27f1fc6ef615bf285a6801b2e54ad214d88ef664c3ff73ce756532ac5a4ed80f",
          "withoutMetadata": "ffd51474b7f2a846a0b614e3e14ff0225b309bc49c8b2e5dc516d0273e0d1f22",
          "linkedWithoutMetadata": "ffd51474b7f2a846a0b614e3e14ff0225b309bc49c8b2e5dc516d0273e0d1f22"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4741",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)5576",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4527",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4741": {
              "label": "contract Items"
            },
            "t_contract(Tools)5576": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4527": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4552_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4552_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4552_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Mining": {
        "src": "contracts/Mining.sol:11",
        "version": {
          "withMetadata": "3549a52998d500cbfd810463f057d07b4ef115d5ad3722142bca2a9c4af8aa53",
          "withoutMetadata": "0ff5c500900bf595b099c93b23cf03c4001ec3739044f32e17668501a603993b",
          "linkedWithoutMetadata": "0ff5c500900bf595b099c93b23cf03c4001ec3739044f32e17668501a603993b"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "mine(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Mining",
            "src": "contracts/Mining.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Mining",
              "label": "itemsContract",
              "type": "t_contract(Items)4741",
              "src": "contracts/Mining.sol:12"
            },
            {
              "contract": "Mining",
              "label": "toolsContract",
              "type": "t_contract(Tools)5576",
              "src": "contracts/Mining.sol:13"
            },
            {
              "contract": "Mining",
              "label": "claimsContract",
              "type": "t_contract(Claims)3946",
              "src": "contracts/Mining.sol:14"
            },
            {
              "contract": "Mining",
              "label": "goldContract",
              "type": "t_contract(Gold)4527",
              "src": "contracts/Mining.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4741": {
              "label": "contract Items"
            },
            "t_contract(Tools)5576": {
              "label": "contract Tools"
            },
            "t_contract(Claims)3946": {
              "label": "contract Claims"
            },
            "t_contract(Gold)4527": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "226d642b4451d87f8929d53600f8fe42958bf41ff50193aed76d7455cf7333a7",
          "withoutMetadata": "226d642b4451d87f8929d53600f8fe42958bf41ff50193aed76d7455cf7333a7",
          "linkedWithoutMetadata": "226d642b4451d87f8929d53600f8fe42958bf41ff50193aed76d7455cf7333a7"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "exists(uint256)",
          "getToolDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)5247_storage)",
              "src": "contracts/Tools.sol:40"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)5261_storage)",
              "src": "contracts/Tools.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)5247_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)5247_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)5261_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)5261_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)5240_storage"
                }
              ]
            },
            "t_struct(Bonuses)5240_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                },
                {
                  "label": "ruby",
                  "type": "t_uint256"
                },
                {
                  "label": "emerald",
                  "type": "t_uint256"
                },
                {
                  "label": "sapphire",
                  "type": "t_uint256"
                },
                {
                  "label": "diamond",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "bddcac274351b8149ef2f844e5a82211fd3e32a36f12a34edaf415b886221fbe",
          "withoutMetadata": "f764a836b763bcf4be1b1824efe30761c333f5a4ce6b0f0062a6f8ae908b0271",
          "linkedWithoutMetadata": "f764a836b763bcf4be1b1824efe30761c333f5a4ce6b0f0062a6f8ae908b0271"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "mintClaim(uint256)",
          "exists(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3623_storage)",
              "src": "contracts/Claims.sol:31"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3623_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3623_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3607_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3607_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "c3c63a675665603ffb9af22a54fe858200418be6fafda3875385cd1ad8bf623b",
          "withoutMetadata": "65e7dd9b40e531370e1e856aef9bb5a728e326455b9e74018fd601466d56c46d",
          "linkedWithoutMetadata": "65e7dd9b40e531370e1e856aef9bb5a728e326455b9e74018fd601466d56c46d"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256,uint8)",
          "updateRecipe(string,uint256,uint256,uint256,uint256,uint8)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)4677",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)5240",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3920_storage)",
              "src": "contracts/Crafting.sol:31"
            }
          ],
          "types": {
            "t_contract(Items)4677": {
              "label": "contract Items"
            },
            "t_contract(Tools)5240": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3920_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3920_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_enum(OutputTokenType)3923"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_enum(OutputTokenType)3923": {
              "label": "enum Crafting.OutputTokenType",
              "members": [
                "Item",
                "Tool"
              ]
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "646e3d4a52616980f7581b51ce195b86782b73a378bcea8dc295b828344d68d0",
          "withoutMetadata": "ffd51474b7f2a846a0b614e3e14ff0225b309bc49c8b2e5dc516d0273e0d1f22",
          "linkedWithoutMetadata": "ffd51474b7f2a846a0b614e3e14ff0225b309bc49c8b2e5dc516d0273e0d1f22"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4677",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)5240",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4463",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4677": {
              "label": "contract Items"
            },
            "t_contract(Tools)5240": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4463": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4488_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4488_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4488_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Mining": {
        "src": "contracts/Mining.sol:11",
        "version": {
          "withMetadata": "31c42ae82eb103ccbdde2198b7b531078b4f1ab9d2c836a8aa2709ad31306fc6",
          "withoutMetadata": "f53cc0eac00b0419a976ea6b261f66187c12dab34d145fa1ce82118db9f75005",
          "linkedWithoutMetadata": "f53cc0eac00b0419a976ea6b261f66187c12dab34d145fa1ce82118db9f75005"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "mine(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Mining",
            "src": "contracts/Mining.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Mining",
              "label": "itemsContract",
              "type": "t_contract(Items)4677",
              "src": "contracts/Mining.sol:12"
            },
            {
              "contract": "Mining",
              "label": "toolsContract",
              "type": "t_contract(Tools)5240",
              "src": "contracts/Mining.sol:13"
            },
            {
              "contract": "Mining",
              "label": "claimsContract",
              "type": "t_contract(Claims)3882",
              "src": "contracts/Mining.sol:14"
            },
            {
              "contract": "Mining",
              "label": "goldContract",
              "type": "t_contract(Gold)4463",
              "src": "contracts/Mining.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4677": {
              "label": "contract Items"
            },
            "t_contract(Tools)5240": {
              "label": "contract Tools"
            },
            "t_contract(Claims)3882": {
              "label": "contract Claims"
            },
            "t_contract(Gold)4463": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "580ff0ed0b3981d95c1d0b92eee4b32aff926cd479d22c790ba01689f681a6ac",
          "withoutMetadata": "580ff0ed0b3981d95c1d0b92eee4b32aff926cd479d22c790ba01689f681a6ac",
          "linkedWithoutMetadata": "580ff0ed0b3981d95c1d0b92eee4b32aff926cd479d22c790ba01689f681a6ac"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "exists(uint256)",
          "getToolDetails(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4955_storage)",
              "src": "contracts/Tools.sol:32"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4974_storage)",
              "src": "contracts/Tools.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4955_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4955_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4974_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4974_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "stoneBonus",
                  "type": "t_uint256"
                },
                {
                  "label": "ironBonus",
                  "type": "t_uint256"
                },
                {
                  "label": "mithrilBonus",
                  "type": "t_uint256"
                },
                {
                  "label": "goldBonus",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "2ddb121f7bed5b9d7949a8bb64fa379e46627eff7c23c2c2d52a57f17055e46d",
          "withoutMetadata": "65e7dd9b40e531370e1e856aef9bb5a728e326455b9e74018fd601466d56c46d",
          "linkedWithoutMetadata": "65e7dd9b40e531370e1e856aef9bb5a728e326455b9e74018fd601466d56c46d"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256,uint8)",
          "updateRecipe(string,uint256,uint256,uint256,uint256,uint8)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)3603",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)3965",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3044_storage)",
              "src": "contracts/Crafting.sol:31"
            }
          ],
          "types": {
            "t_contract(Items)3603": {
              "label": "contract Items"
            },
            "t_contract(Tools)3965": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3044_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3044_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_enum(OutputTokenType)3047"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_enum(OutputTokenType)3047": {
              "label": "enum Crafting.OutputTokenType",
              "members": [
                "Item",
                "Tool"
              ]
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3414_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3414_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3414_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "b64ae1f7731d56e864d6204d83053e39625c40773964bb94ba561c44012f8743",
          "withoutMetadata": "b64ae1f7731d56e864d6204d83053e39625c40773964bb94ba561c44012f8743",
          "linkedWithoutMetadata": "b64ae1f7731d56e864d6204d83053e39625c40773964bb94ba561c44012f8743"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)3719_storage)",
              "src": "contracts/Tools.sol:35"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)3733_storage)",
              "src": "contracts/Tools.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)3719_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)3719_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)3733_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)3733_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3712_storage"
                }
              ]
            },
            "t_struct(Bonuses)3712_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "a43f0c57843ddd484bbee1f3776ea2c2ea64b39f98f892540a00e5bca3d0940f",
          "withoutMetadata": "3d41572090ea4f9012471ec5780467a309feaae17e0df41ae14a1e2b4092de39",
          "linkedWithoutMetadata": "3d41572090ea4f9012471ec5780467a309feaae17e0df41ae14a1e2b4092de39"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256,uint8)",
          "updateRecipe(string,uint256,uint256,uint256,uint256,uint8)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)4372",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)4734",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3615_storage)",
              "src": "contracts/Crafting.sol:31"
            }
          ],
          "types": {
            "t_contract(Items)4372": {
              "label": "contract Items"
            },
            "t_contract(Tools)4734": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3615_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3615_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_enum(OutputTokenType)3618"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_enum(OutputTokenType)3618": {
              "label": "enum Crafting.OutputTokenType",
              "members": [
                "Item",
                "Tool"
              ]
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "d9fd71a351973d3660af69caa1b3ae353239596189dc3182395d91bbecfdd0d2",
          "withoutMetadata": "ffd51474b7f2a846a0b614e3e14ff0225b309bc49c8b2e5dc516d0273e0d1f22",
          "linkedWithoutMetadata": "ffd51474b7f2a846a0b614e3e14ff0225b309bc49c8b2e5dc516d0273e0d1f22"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4372",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4734",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4158",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4372": {
              "label": "contract Items"
            },
            "t_contract(Tools)4734": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4158": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "withoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17",
          "linkedWithoutMetadata": "018f9d187ebda5efcd38425bac4025e002841c0e5264ae0fcb466c09c2c93f17"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4183_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4183_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4183_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "b64ae1f7731d56e864d6204d83053e39625c40773964bb94ba561c44012f8743",
          "withoutMetadata": "b64ae1f7731d56e864d6204d83053e39625c40773964bb94ba561c44012f8743",
          "linkedWithoutMetadata": "b64ae1f7731d56e864d6204d83053e39625c40773964bb94ba561c44012f8743"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4488_storage)",
              "src": "contracts/Tools.sol:35"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4502_storage)",
              "src": "contracts/Tools.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4488_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4488_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4502_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4502_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4481_storage"
                }
              ]
            },
            "t_struct(Bonuses)4481_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "381b1f9fb9981c4e46ec57b21f40733ded8928fb6a91e2a42629530e0c9905e8",
          "withoutMetadata": "c34ad4f6c4f8d695a0e112c9db7dfa0ed861bdb07106891634f2beea51be1e29",
          "linkedWithoutMetadata": "c34ad4f6c4f8d695a0e112c9db7dfa0ed861bdb07106891634f2beea51be1e29"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "mintClaim(uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3623_storage)",
              "src": "contracts/Claims.sol:31"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3623_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3623_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3607_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3607_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "d8ed1b0ce6c75d51db5a4f15b0bc3d686a182395d32a2d7040ffb958e7b2ddca",
          "withoutMetadata": "3d41572090ea4f9012471ec5780467a309feaae17e0df41ae14a1e2b4092de39",
          "linkedWithoutMetadata": "3d41572090ea4f9012471ec5780467a309feaae17e0df41ae14a1e2b4092de39"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256,uint8)",
          "updateRecipe(string,uint256,uint256,uint256,uint256,uint8)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)4633",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)4995",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3903_storage)",
              "src": "contracts/Crafting.sol:31"
            }
          ],
          "types": {
            "t_contract(Items)4633": {
              "label": "contract Items"
            },
            "t_contract(Tools)4995": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3903_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3903_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_enum(OutputTokenType)3906"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_enum(OutputTokenType)3906": {
              "label": "enum Crafting.OutputTokenType",
              "members": [
                "Item",
                "Tool"
              ]
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "7d2e4efdbdbf49e703ed3f3ccbb917fa398ac97da6833125332d5ee5fd7cd609",
          "withoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5",
          "linkedWithoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4633",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4995",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4419",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4633": {
              "label": "contract Items"
            },
            "t_contract(Tools)4995": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4419": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "4fd21d66151a9010b49d0e1d9950caad0733ff4a729162f29aa81fc116235e80",
          "withoutMetadata": "4fd21d66151a9010b49d0e1d9950caad0733ff4a729162f29aa81fc116235e80",
          "linkedWithoutMetadata": "4fd21d66151a9010b49d0e1d9950caad0733ff4a729162f29aa81fc116235e80"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4444_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4444_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4444_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "b64ae1f7731d56e864d6204d83053e39625c40773964bb94ba561c44012f8743",
          "withoutMetadata": "b64ae1f7731d56e864d6204d83053e39625c40773964bb94ba561c44012f8743",
          "linkedWithoutMetadata": "b64ae1f7731d56e864d6204d83053e39625c40773964bb94ba561c44012f8743"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4749_storage)",
              "src": "contracts/Tools.sol:35"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4763_storage)",
              "src": "contracts/Tools.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4749_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4749_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4763_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4763_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4742_storage"
                }
              ]
            },
            "t_struct(Bonuses)4742_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "9bd860e60914eaaf2b3bd3f7acfd22ca07ca9346a5fe60de0b8680deabd17eaf",
          "withoutMetadata": "19a7fbe8b9fa0f44bc525e599c67d303560149c2c93e79c1adcd0d7d121a9b90",
          "linkedWithoutMetadata": "19a7fbe8b9fa0f44bc525e599c67d303560149c2c93e79c1adcd0d7d121a9b90"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "mintClaim(address,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1778_storage)",
              "src": "contracts/Claims.sol:31"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1778_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1778_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1762_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1762_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "13dc13bf3033bc14273bc6dd628acde7df8560521228476f5042e8f0e05af141",
          "withoutMetadata": "8f81c93f7fd0482f46b6bfce63aee9b1621ed23802a08ffafa4e00feff85cde0",
          "linkedWithoutMetadata": "8f81c93f7fd0482f46b6bfce63aee9b1621ed23802a08ffafa4e00feff85cde0"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1778_storage)",
              "src": "contracts/Claims.sol:31"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1778_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1778_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1762_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1762_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "cd8c1b3749fe513463131256452a477603956f12908a0249365e39f33db11283",
          "withoutMetadata": "121163ad7f040d7119d822e3a9dcd921cc96db53585a06f66685c7da5ea4dbab",
          "linkedWithoutMetadata": "121163ad7f040d7119d822e3a9dcd921cc96db53585a06f66685c7da5ea4dbab"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3623_storage)",
              "src": "contracts/Claims.sol:31"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3623_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3623_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3607_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3607_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "75eadffa4410c434c506358abed1f5e9ac906d6801fb851a5255e10db980daa2",
          "withoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5",
          "linkedWithoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4312",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4674",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4116",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4312": {
              "label": "contract Items"
            },
            "t_contract(Tools)4674": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4116": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64",
          "withoutMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64",
          "linkedWithoutMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4141_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4141_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4141_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "cac44534a300e5be9b1947202d4f1c1fa739b653993eaa69b367ac6eb6737ab6",
          "withoutMetadata": "cac44534a300e5be9b1947202d4f1c1fa739b653993eaa69b367ac6eb6737ab6",
          "linkedWithoutMetadata": "cac44534a300e5be9b1947202d4f1c1fa739b653993eaa69b367ac6eb6737ab6"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4428_storage)",
              "src": "contracts/Tools.sol:35"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4442_storage)",
              "src": "contracts/Tools.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4428_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4428_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4442_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4442_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4421_storage"
                }
              ]
            },
            "t_struct(Bonuses)4421_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "e76dd9b7efc711b941a7eccc484853aeb5bdff1d728fec85fefb613823edff85",
          "withoutMetadata": "5f68f43ed233d184a610e8fe2535fbc7edf571873a9bc142edc0791242779745",
          "linkedWithoutMetadata": "5f68f43ed233d184a610e8fe2535fbc7edf571873a9bc142edc0791242779745"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3623_storage)",
              "src": "contracts/Claims.sol:31"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3623_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3623_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3607_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3607_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "mithril",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:11",
        "version": {
          "withMetadata": "db68bb4e6a435c542c57fa842069113b5a36ff72262859101910924202b555a5",
          "withoutMetadata": "4680cf81b780328e704f5e6b93cdcc242dd6e7ca77344a1b4aee5094d7bfc99d",
          "linkedWithoutMetadata": "4680cf81b780328e704f5e6b93cdcc242dd6e7ca77344a1b4aee5094d7bfc99d"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4347",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4709",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4151",
              "src": "contracts/Faucet.sol:14"
            },
            {
              "contract": "Faucet",
              "label": "claimContract",
              "type": "t_contract(Claims)3865",
              "src": "contracts/Faucet.sol:15"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:17"
            }
          ],
          "types": {
            "t_contract(Items)4347": {
              "label": "contract Items"
            },
            "t_contract(Tools)4709": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4151": {
              "label": "contract Gold"
            },
            "t_contract(Claims)3865": {
              "label": "contract Claims"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64",
          "withoutMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64",
          "linkedWithoutMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4176_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4176_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4176_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "cac44534a300e5be9b1947202d4f1c1fa739b653993eaa69b367ac6eb6737ab6",
          "withoutMetadata": "cac44534a300e5be9b1947202d4f1c1fa739b653993eaa69b367ac6eb6737ab6",
          "linkedWithoutMetadata": "cac44534a300e5be9b1947202d4f1c1fa739b653993eaa69b367ac6eb6737ab6"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4463_storage)",
              "src": "contracts/Tools.sol:35"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4477_storage)",
              "src": "contracts/Tools.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4463_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4463_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4477_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4477_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4456_storage"
                }
              ]
            },
            "t_struct(Bonuses)4456_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "3992b55b45641c1438e87f369e37eff95aff34dc4db18a7eaa303d32fdcb4852",
          "withoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605",
          "linkedWithoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256)",
          "updateRecipe(string,uint256,uint256,uint256,uint256)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)4250",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)4612",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3612_storage)",
              "src": "contracts/Crafting.sol:25"
            }
          ],
          "types": {
            "t_contract(Items)4250": {
              "label": "contract Items"
            },
            "t_contract(Tools)4612": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3612_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3612_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_uint256"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "75eadffa4410c434c506358abed1f5e9ac906d6801fb851a5255e10db980daa2",
          "withoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5",
          "linkedWithoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4250",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4612",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4054",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4250": {
              "label": "contract Items"
            },
            "t_contract(Tools)4612": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4054": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64",
          "withoutMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64",
          "linkedWithoutMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4079_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4079_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4079_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "cac44534a300e5be9b1947202d4f1c1fa739b653993eaa69b367ac6eb6737ab6",
          "withoutMetadata": "cac44534a300e5be9b1947202d4f1c1fa739b653993eaa69b367ac6eb6737ab6",
          "linkedWithoutMetadata": "cac44534a300e5be9b1947202d4f1c1fa739b653993eaa69b367ac6eb6737ab6"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4366_storage)",
              "src": "contracts/Tools.sol:35"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4380_storage)",
              "src": "contracts/Tools.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4366_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4366_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4380_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4380_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4359_storage"
                }
              ]
            },
            "t_struct(Bonuses)4359_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "c24b2e1f91ca4f21ac5cb0063523455d3092faf8fd518d458f51bd9a9e7a289f",
          "withoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605",
          "linkedWithoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256)",
          "updateRecipe(string,uint256,uint256,uint256,uint256)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)4250",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)4612",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3612_storage)",
              "src": "contracts/Crafting.sol:25"
            }
          ],
          "types": {
            "t_contract(Items)4250": {
              "label": "contract Items"
            },
            "t_contract(Tools)4612": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3612_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3612_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_uint256"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "4882eb76fbb43a9412bfe7c95a1c7fb7e6fe45f26d3895dd8414ab17d272dd93",
          "withoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5",
          "linkedWithoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4250",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4612",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4054",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4250": {
              "label": "contract Items"
            },
            "t_contract(Tools)4612": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4054": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64",
          "withoutMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64",
          "linkedWithoutMetadata": "4f6dc6028d3dc6ae655ec327a8f5efeebb27020335caa3fa80e56870245f6d64"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4079_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4079_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4079_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "34bb8397cd941dc868cfc8949d9ffe2871ed6488f9dd42c45aecabafd2004c15",
          "withoutMetadata": "34bb8397cd941dc868cfc8949d9ffe2871ed6488f9dd42c45aecabafd2004c15",
          "linkedWithoutMetadata": "34bb8397cd941dc868cfc8949d9ffe2871ed6488f9dd42c45aecabafd2004c15"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4366_storage)",
              "src": "contracts/Tools.sol:35"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4380_storage)",
              "src": "contracts/Tools.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4366_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4366_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4380_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4380_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4359_storage"
                }
              ]
            },
            "t_struct(Bonuses)4359_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "1cf341006c2c5a63fb8b699f8b695f78ecfd3cbd294d4736d16faa4b490f6e4c",
          "withoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605",
          "linkedWithoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256)",
          "updateRecipe(string,uint256,uint256,uint256,uint256)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)4249",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)4611",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3612_storage)",
              "src": "contracts/Crafting.sol:25"
            }
          ],
          "types": {
            "t_contract(Items)4249": {
              "label": "contract Items"
            },
            "t_contract(Tools)4611": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3612_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3612_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_uint256"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "c9c90248862c4635537e0011bd8bbebb52fed23172415c5c45781200f11b1533",
          "withoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5",
          "linkedWithoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4249",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4611",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4054",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4249": {
              "label": "contract Items"
            },
            "t_contract(Tools)4611": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4054": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "8bee88f80d5b1cbba324169c73121b6fb66d99223d3011d5046d472d25c17ca6",
          "withoutMetadata": "8bee88f80d5b1cbba324169c73121b6fb66d99223d3011d5046d472d25c17ca6",
          "linkedWithoutMetadata": "8bee88f80d5b1cbba324169c73121b6fb66d99223d3011d5046d472d25c17ca6"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4079_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4079_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4079_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "34bb8397cd941dc868cfc8949d9ffe2871ed6488f9dd42c45aecabafd2004c15",
          "withoutMetadata": "34bb8397cd941dc868cfc8949d9ffe2871ed6488f9dd42c45aecabafd2004c15",
          "linkedWithoutMetadata": "34bb8397cd941dc868cfc8949d9ffe2871ed6488f9dd42c45aecabafd2004c15"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "addToolType(string,string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTypeId",
            "src": "contracts/Tools.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "nextTypeId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:12"
            },
            {
              "contract": "Tools",
              "label": "_toolTypes",
              "type": "t_mapping(t_uint256,t_struct(ToolType)4365_storage)",
              "src": "contracts/Tools.sol:35"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4379_storage)",
              "src": "contracts/Tools.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(ToolType)4365_storage)": {
              "label": "mapping(uint256 => struct Tools.ToolType)"
            },
            "t_struct(ToolType)4365_storage": {
              "label": "struct Tools.ToolType",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Tool)4379_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4379_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4358_storage"
                }
              ]
            },
            "t_struct(Bonuses)4358_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "006422afb35a44d394db5c0a14e24224909d4db402a9bf4ca856901f80e6e67d",
          "withoutMetadata": "766f920df80ccd6eb2389804bab48aac82d978472706a7015ff17f0e7ee0250f",
          "linkedWithoutMetadata": "766f920df80ccd6eb2389804bab48aac82d978472706a7015ff17f0e7ee0250f"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)3624_storage)",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)3624_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)3624_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3608_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3608_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "c0e02ddb1b248aaf9101bb502e8ce0859b97a04c95b36e7fe76705ecf9dc8ed4",
          "withoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605",
          "linkedWithoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256)",
          "updateRecipe(string,uint256,uint256,uint256,uint256)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)4509",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)4796",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3866_storage)",
              "src": "contracts/Crafting.sol:25"
            }
          ],
          "types": {
            "t_contract(Items)4509": {
              "label": "contract Items"
            },
            "t_contract(Tools)4796": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3866_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3866_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_uint256"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "117dca28a26b2270982f9d2e01fdd9e898a998603e5f3bf8ec98c9616225d675",
          "withoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5",
          "linkedWithoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4509",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4796",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4308",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4509": {
              "label": "contract Items"
            },
            "t_contract(Tools)4796": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4308": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "9a7f52b2a10ac0eacbf7c8bf76bc5e0b532a2e296b1cac42ce37e3904094a852",
          "withoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14",
          "linkedWithoutMetadata": "139eceeca519d2a68f5453207d13f5a2649bfb23f3deb1a6014f9035f48d4d14"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "withoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "linkedWithoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4333_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4333_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4333_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "7e5cc72980716816fa9b1e2dbd6233dea0d742ee69785420501c23285f58b662",
          "withoutMetadata": "c74d3d149239c9ab91fd938571888ea60a1d0235c73a2966825128211af1ca73",
          "linkedWithoutMetadata": "c74d3d149239c9ab91fd938571888ea60a1d0235c73a2966825128211af1ca73"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4629_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)4629_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4629_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4615_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)4615_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "777e1f376828c5849f362739839d8352ae2c6218212c18f7274bddb148e8184b",
          "withoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605",
          "linkedWithoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256)",
          "updateRecipe(string,uint256,uint256,uint256,uint256)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)4269",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)4562",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3612_storage)",
              "src": "contracts/Crafting.sol:25"
            }
          ],
          "types": {
            "t_contract(Items)4269": {
              "label": "contract Items"
            },
            "t_contract(Tools)4562": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3612_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3612_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_uint256"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "81857bbfe8462c38e13e70d97c58ee60a7483cdd268c14f61cd67c222b2a70b0",
          "withoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5",
          "linkedWithoutMetadata": "851bc6449e8f317450b4e2027a55da6bd140426007e16c6954611609cc5601f5"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4269",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4562",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)4068",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4269": {
              "label": "contract Items"
            },
            "t_contract(Tools)4562": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4068": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "58c5e615f967f46bc12b58185968f987a4f3850563884711708e328c7d6ae34b",
          "withoutMetadata": "1d0941c20cef6a6b0a5f91a8da6e99d08a5c5716e055b619b986334de36ca4a7",
          "linkedWithoutMetadata": "1d0941c20cef6a6b0a5f91a8da6e99d08a5c5716e055b619b986334de36ca4a7"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "withoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "linkedWithoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4093_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4093_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4093_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "withoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "linkedWithoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4389_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)4389_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4389_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4375_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)4375_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "871adecd195a2b4c612bc357143a500ba347b2706ece77b319c70b24294145f5",
          "withoutMetadata": "85d955e381d6c2d8d0f8f98113a430d471587ae685c9ea6a0f744aed4638d426",
          "linkedWithoutMetadata": "85d955e381d6c2d8d0f8f98113a430d471587ae685c9ea6a0f744aed4638d426"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4058",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4351",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)3857",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4058": {
              "label": "contract Items"
            },
            "t_contract(Tools)4351": {
              "label": "contract Tools"
            },
            "t_contract(Gold)3857": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "58c5e615f967f46bc12b58185968f987a4f3850563884711708e328c7d6ae34b",
          "withoutMetadata": "1d0941c20cef6a6b0a5f91a8da6e99d08a5c5716e055b619b986334de36ca4a7",
          "linkedWithoutMetadata": "1d0941c20cef6a6b0a5f91a8da6e99d08a5c5716e055b619b986334de36ca4a7"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "withoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "linkedWithoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3882_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3882_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3882_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "withoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "linkedWithoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4178_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)4178_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4178_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4164_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)4164_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "5712b46415aa7391653913c1d480bc5d246d0e058f15d0bcd01e31c7d8edca3c",
          "withoutMetadata": "4881dbf60e7c6c19a623b238f1cd0c7c9c1f785dbac34180962f110fb04e4150",
          "linkedWithoutMetadata": "4881dbf60e7c6c19a623b238f1cd0c7c9c1f785dbac34180962f110fb04e4150"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()",
          "getRequests()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4052",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4345",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)3851",
              "src": "contracts/Faucet.sol:13"
            },
            {
              "contract": "Faucet",
              "label": "_tokenRequests",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Faucet.sol:15"
            }
          ],
          "types": {
            "t_contract(Items)4052": {
              "label": "contract Items"
            },
            "t_contract(Tools)4345": {
              "label": "contract Tools"
            },
            "t_contract(Gold)3851": {
              "label": "contract Gold"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "58c5e615f967f46bc12b58185968f987a4f3850563884711708e328c7d6ae34b",
          "withoutMetadata": "1d0941c20cef6a6b0a5f91a8da6e99d08a5c5716e055b619b986334de36ca4a7",
          "linkedWithoutMetadata": "1d0941c20cef6a6b0a5f91a8da6e99d08a5c5716e055b619b986334de36ca4a7"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "withoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "linkedWithoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3876_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3876_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3876_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "withoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "linkedWithoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4172_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)4172_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4172_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4158_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)4158_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Faucet": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "b46e6ac073fa92af42bf39f8d3793d019b9ee5156c102c3d707ed27bdb13090a",
          "withoutMetadata": "e5d88d8b0ddb11f550f2989d30cb08b3ffd67db147a591c68e9005541ee1f19d",
          "linkedWithoutMetadata": "e5d88d8b0ddb11f550f2989d30cb08b3ffd67db147a591c68e9005541ee1f19d"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Faucet",
            "src": "contracts/Faucet.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Faucet",
              "label": "itemsContract",
              "type": "t_contract(Items)4037",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Faucet",
              "label": "toolsContract",
              "type": "t_contract(Tools)4330",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Faucet",
              "label": "goldContract",
              "type": "t_contract(Gold)3836",
              "src": "contracts/Faucet.sol:13"
            }
          ],
          "types": {
            "t_contract(Items)4037": {
              "label": "contract Items"
            },
            "t_contract(Tools)4330": {
              "label": "contract Tools"
            },
            "t_contract(Gold)3836": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "58c5e615f967f46bc12b58185968f987a4f3850563884711708e328c7d6ae34b",
          "withoutMetadata": "1d0941c20cef6a6b0a5f91a8da6e99d08a5c5716e055b619b986334de36ca4a7",
          "linkedWithoutMetadata": "1d0941c20cef6a6b0a5f91a8da6e99d08a5c5716e055b619b986334de36ca4a7"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "withoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "linkedWithoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3861_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3861_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3861_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "withoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "linkedWithoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4157_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)4157_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4157_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4143_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)4143_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Faucet.sol:10",
        "version": {
          "withMetadata": "1eaf1bb731157bbce3018f4e74882c8cdcb843331101891e44a07c99ce0fcd98",
          "withoutMetadata": "e5d88d8b0ddb11f550f2989d30cb08b3ffd67db147a591c68e9005541ee1f19d",
          "linkedWithoutMetadata": "e5d88d8b0ddb11f550f2989d30cb08b3ffd67db147a591c68e9005541ee1f19d"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "requestTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Faucet.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)4248",
              "src": "contracts/Faucet.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)4541",
              "src": "contracts/Faucet.sol:12"
            },
            {
              "contract": "Crafting",
              "label": "goldContract",
              "type": "t_contract(Gold)4047",
              "src": "contracts/Faucet.sol:13"
            }
          ],
          "types": {
            "t_contract(Items)4248": {
              "label": "contract Items"
            },
            "t_contract(Tools)4541": {
              "label": "contract Tools"
            },
            "t_contract(Gold)4047": {
              "label": "contract Gold"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:9",
        "version": {
          "withMetadata": "58c5e615f967f46bc12b58185968f987a4f3850563884711708e328c7d6ae34b",
          "withoutMetadata": "1d0941c20cef6a6b0a5f91a8da6e99d08a5c5716e055b619b986334de36ca4a7",
          "linkedWithoutMetadata": "1d0941c20cef6a6b0a5f91a8da6e99d08a5c5716e055b619b986334de36ca4a7"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "withoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989",
          "linkedWithoutMetadata": "b2819b15dfb402f2e891260dccd5b4bb1945f9e60b5ab4a2f8a3fa9f2d6dc989"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)4072_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)4072_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)4072_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "withoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "linkedWithoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)4368_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)4368_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)4368_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)4354_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)4354_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "a52858b21c3c8b982d0bdc7638dc6586bf7bb7f11218aa5d167652ef37ee0a91",
          "withoutMetadata": "a52858b21c3c8b982d0bdc7638dc6586bf7bb7f11218aa5d167652ef37ee0a91",
          "linkedWithoutMetadata": "a52858b21c3c8b982d0bdc7638dc6586bf7bb7f11218aa5d167652ef37ee0a91"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "e82d0e71d5fa3486cd04eacc1d14f1de1e408b04614b49f10c766922576256b6",
          "withoutMetadata": "e82d0e71d5fa3486cd04eacc1d14f1de1e408b04614b49f10c766922576256b6",
          "linkedWithoutMetadata": "e82d0e71d5fa3486cd04eacc1d14f1de1e408b04614b49f10c766922576256b6"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountMinted",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "amountMinted",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "2570f78a8dcb42d9fd32f60452c88b4809487daf231c9a20ea79a0bd3b5b12e6",
          "withoutMetadata": "2570f78a8dcb42d9fd32f60452c88b4809487daf231c9a20ea79a0bd3b5b12e6",
          "linkedWithoutMetadata": "2570f78a8dcb42d9fd32f60452c88b4809487daf231c9a20ea79a0bd3b5b12e6"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "b972e6b46c5567f3dd044299923e33fc941efda2c176870dc32b15f17d1c25a8",
          "withoutMetadata": "b972e6b46c5567f3dd044299923e33fc941efda2c176870dc32b15f17d1c25a8",
          "linkedWithoutMetadata": "b972e6b46c5567f3dd044299923e33fc941efda2c176870dc32b15f17d1c25a8"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "def9e18eb9c3877f267f5a14542197a527a55ba4384cf8d0844788a6975e1eb2",
          "withoutMetadata": "def9e18eb9c3877f267f5a14542197a527a55ba4384cf8d0844788a6975e1eb2",
          "linkedWithoutMetadata": "def9e18eb9c3877f267f5a14542197a527a55ba4384cf8d0844788a6975e1eb2"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_uint256)10_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)10_storage": {
              "label": "uint256[10]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "2c8e8808a8c8bb728ce6a9cef4fd7d0c079f39a76f5f47e54e6c6dc40c38aa2c",
          "withoutMetadata": "2c8e8808a8c8bb728ce6a9cef4fd7d0c079f39a76f5f47e54e6c6dc40c38aa2c",
          "linkedWithoutMetadata": "2c8e8808a8c8bb728ce6a9cef4fd7d0c079f39a76f5f47e54e6c6dc40c38aa2c"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "b972e6b46c5567f3dd044299923e33fc941efda2c176870dc32b15f17d1c25a8",
          "withoutMetadata": "b972e6b46c5567f3dd044299923e33fc941efda2c176870dc32b15f17d1c25a8",
          "linkedWithoutMetadata": "b972e6b46c5567f3dd044299923e33fc941efda2c176870dc32b15f17d1c25a8"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "7dfafb982e1ad34cd767d0045c4afbd0c4e4f7570e8e4117ea0e42eb51195213",
          "withoutMetadata": "7dfafb982e1ad34cd767d0045c4afbd0c4e4f7570e8e4117ea0e42eb51195213",
          "linkedWithoutMetadata": "7dfafb982e1ad34cd767d0045c4afbd0c4e4f7570e8e4117ea0e42eb51195213"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "85b89e9fe9f82c07a56794d3a497fbcf2db938c56c3301fe96c90fd6df37177f",
          "withoutMetadata": "85b89e9fe9f82c07a56794d3a497fbcf2db938c56c3301fe96c90fd6df37177f",
          "linkedWithoutMetadata": "85b89e9fe9f82c07a56794d3a497fbcf2db938c56c3301fe96c90fd6df37177f"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage": {
              "label": "uint256[][][]"
            },
            "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
              "label": "uint256[][]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "bf0535f7669e375aee4dd06270dcf425477e05ea1d6529db29188a20b0e21d6f",
          "withoutMetadata": "bf0535f7669e375aee4dd06270dcf425477e05ea1d6529db29188a20b0e21d6f",
          "linkedWithoutMetadata": "bf0535f7669e375aee4dd06270dcf425477e05ea1d6529db29188a20b0e21d6f"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_array(t_uint256)dyn_storage)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
              "label": "uint256[][]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "3a0dc2355fb65fc7c0ddfe42f618b69c86267334a31c3c9769083fa13a274791",
          "withoutMetadata": "3a0dc2355fb65fc7c0ddfe42f618b69c86267334a31c3c9769083fa13a274791",
          "linkedWithoutMetadata": "3a0dc2355fb65fc7c0ddfe42f618b69c86267334a31c3c9769083fa13a274791"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage": {
              "label": "uint256[][][]"
            },
            "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
              "label": "uint256[][]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "81b87fc91a668cee4bcfefbcea2391c3629710777cbd58a336dce1b24ec17cc8",
          "withoutMetadata": "81b87fc91a668cee4bcfefbcea2391c3629710777cbd58a336dce1b24ec17cc8",
          "linkedWithoutMetadata": "81b87fc91a668cee4bcfefbcea2391c3629710777cbd58a336dce1b24ec17cc8"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage": {
              "label": "uint256[][][]"
            },
            "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
              "label": "uint256[][]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "2a7f2b7c9d8cc5256a9171c88206cf17c80fe35321f7f37df048fd89fdfb1669",
          "withoutMetadata": "2a7f2b7c9d8cc5256a9171c88206cf17c80fe35321f7f37df048fd89fdfb1669",
          "linkedWithoutMetadata": "2a7f2b7c9d8cc5256a9171c88206cf17c80fe35321f7f37df048fd89fdfb1669"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage": {
              "label": "uint256[][][]"
            },
            "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
              "label": "uint256[][]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "01a9782fe99c2c51ebae707fb146f79b5734875e6095ec0dd2522e9403ad9d83",
          "withoutMetadata": "01a9782fe99c2c51ebae707fb146f79b5734875e6095ec0dd2522e9403ad9d83",
          "linkedWithoutMetadata": "01a9782fe99c2c51ebae707fb146f79b5734875e6095ec0dd2522e9403ad9d83"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage": {
              "label": "uint256[][][]"
            },
            "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
              "label": "uint256[][]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "bd1bfe763bbc688d03871caec5473de73ecc02bc01fc73d08d730e038ee2cb54",
          "withoutMetadata": "bd1bfe763bbc688d03871caec5473de73ecc02bc01fc73d08d730e038ee2cb54",
          "linkedWithoutMetadata": "bd1bfe763bbc688d03871caec5473de73ecc02bc01fc73d08d730e038ee2cb54"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage": {
              "label": "uint256[][][]"
            },
            "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
              "label": "uint256[][]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "f8a9b68488c8e8deabbb890e33af5758037eb4000a290a76939c95c2bb556db4",
          "withoutMetadata": "f8a9b68488c8e8deabbb890e33af5758037eb4000a290a76939c95c2bb556db4",
          "linkedWithoutMetadata": "f8a9b68488c8e8deabbb890e33af5758037eb4000a290a76939c95c2bb556db4"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "668b811a39a66b7b9d4bc7481993f3f17d3e640bab7abc39d8d3ede1cefc7384",
          "withoutMetadata": "3dcee96d10f4ee2eac2db41820f0cdf59aaa1870a16cfc5b83f496bb40299ad5",
          "linkedWithoutMetadata": "3dcee96d10f4ee2eac2db41820f0cdf59aaa1870a16cfc5b83f496bb40299ad5"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "509dfe7aa559ec393731a0cb574d31c7d546d3decf6866ee5c62e91ce9f70c2d",
          "withoutMetadata": "c7bd9122bc72b727863c08041b987cd869973e304f31a624e3dc34f2eda5ea1e",
          "linkedWithoutMetadata": "c7bd9122bc72b727863c08041b987cd869973e304f31a624e3dc34f2eda5ea1e"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "7b39b248ce878ac81b7bbce9af647ab85da02d983e82c156a74bb6711769db72",
          "withoutMetadata": "7b39b248ce878ac81b7bbce9af647ab85da02d983e82c156a74bb6711769db72",
          "linkedWithoutMetadata": "7b39b248ce878ac81b7bbce9af647ab85da02d983e82c156a74bb6711769db72"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage": {
              "label": "uint256[][][]"
            },
            "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
              "label": "uint256[][]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Claims": {
        "src": "contracts/Claims.sol:10",
        "version": {
          "withMetadata": "3a0dc2355fb65fc7c0ddfe42f618b69c86267334a31c3c9769083fa13a274791",
          "withoutMetadata": "3a0dc2355fb65fc7c0ddfe42f618b69c86267334a31c3c9769083fa13a274791",
          "linkedWithoutMetadata": "3a0dc2355fb65fc7c0ddfe42f618b69c86267334a31c3c9769083fa13a274791"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Claims",
            "src": "contracts/Claims.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Claims.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "mapSize",
            "src": "contracts/Claims.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxDepth",
            "src": "contracts/Claims.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Claims",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:11"
            },
            {
              "contract": "Claims",
              "label": "mapSize",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:12"
            },
            {
              "contract": "Claims",
              "label": "maxDepth",
              "type": "t_uint256",
              "src": "contracts/Claims.sol:13"
            },
            {
              "contract": "Claims",
              "label": "_claimDetails",
              "type": "t_mapping(t_uint256,t_struct(Claim)1779_storage)",
              "src": "contracts/Claims.sol:31"
            },
            {
              "contract": "Claims",
              "label": "coords",
              "type": "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage",
              "src": "contracts/Claims.sol:33"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Claim)1779_storage)": {
              "label": "mapping(uint256 => struct Claims.Claim)"
            },
            "t_struct(Claim)1779_storage": {
              "label": "struct Claims.Claim",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256"
                },
                {
                  "label": "y",
                  "type": "t_uint256"
                },
                {
                  "label": "z",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1763_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1763_storage": {
              "label": "struct Claims.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_array(t_array(t_uint256)dyn_storage)dyn_storage)dyn_storage": {
              "label": "uint256[][][]"
            },
            "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
              "label": "uint256[][]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "1473aaf3c321d698d5a0127eadde9896add9935fd1dbe77f4ea268a25d8f61f9",
          "withoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605",
          "linkedWithoutMetadata": "63d83daebfccc30afe3e9d1b331c05793083820452f2c1324813c20330e2a605"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256)",
          "updateRecipe(string,uint256,uint256,uint256,uint256)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)3495",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)3788",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3041_storage)",
              "src": "contracts/Crafting.sol:25"
            }
          ],
          "types": {
            "t_contract(Items)3495": {
              "label": "contract Items"
            },
            "t_contract(Tools)3788": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3041_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3041_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_uint256"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "withoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "linkedWithoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3337_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3337_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3337_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "withoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb",
          "linkedWithoutMetadata": "70c1efc46c05fb642168bbe70fe04a17bdce7a32e99b943566e2c28da631c5fb"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)3615_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)3615_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)3615_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3601_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3601_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "91bd88860e3ec6067366f66721b74f44e4374f3ade36ac583955aff6f638a555",
          "withoutMetadata": "c092685da7b1609cc3163eb0d004950217007b27b49fed33bc8f81164032b6f1",
          "linkedWithoutMetadata": "c092685da7b1609cc3163eb0d004950217007b27b49fed33bc8f81164032b6f1"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(string,uint256,uint256,uint256)",
          "updateRecipe(string,uint256,uint256,uint256,uint256)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)3474",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)3767",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3041_storage)",
              "src": "contracts/Crafting.sol:25"
            }
          ],
          "types": {
            "t_contract(Items)3474": {
              "label": "contract Items"
            },
            "t_contract(Tools)3767": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3041_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3041_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "recipeId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_uint256"
                },
                {
                  "label": "enabled",
                  "type": "t_bool"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "withoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "linkedWithoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3316_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3316_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3316_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5",
          "withoutMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5",
          "linkedWithoutMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)3594_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)3594_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)3594_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3580_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3580_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "d254d3b6206906793c2607af2788accd887e56f844d65394d7d1c734fb92b43d",
          "withoutMetadata": "493bfe925315188f836fa1dd4543fca5d7d175463899ea1289f2e4c175dcc28f",
          "linkedWithoutMetadata": "493bfe925315188f836fa1dd4543fca5d7d175463899ea1289f2e4c175dcc28f"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(uint256,uint256,uint256)",
          "updateRecipe(bool,uint256,uint256,uint256,uint256)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)3461",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)3754",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3037_storage)",
              "src": "contracts/Crafting.sol:23"
            }
          ],
          "types": {
            "t_contract(Items)3461": {
              "label": "contract Items"
            },
            "t_contract(Tools)3754": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3037_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3037_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "enabled",
                  "type": "t_bool"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "withoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "linkedWithoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3303_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3303_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3303_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5",
          "withoutMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5",
          "linkedWithoutMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)3581_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)3581_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)3581_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3567_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3567_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "9aaa9adac5d29901b6106d71e19f6e509d8766ffebe32fa02fa476c38c901961",
          "withoutMetadata": "d7d616afd0f87649c82a6c61b45e4f8c5e56571a7b9048adc808c87cc0800072",
          "linkedWithoutMetadata": "d7d616afd0f87649c82a6c61b45e4f8c5e56571a7b9048adc808c87cc0800072"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(uint256,uint256,uint256)",
          "updateRecipe(bool,uint256,uint256,uint256,uint256)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numRecipes",
            "src": "contracts/Crafting.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)3461",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)3754",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "numRecipes",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:14"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3037_storage)",
              "src": "contracts/Crafting.sol:23"
            }
          ],
          "types": {
            "t_contract(Items)3461": {
              "label": "contract Items"
            },
            "t_contract(Tools)3754": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3037_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3037_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "enabled",
                  "type": "t_bool"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "withoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "linkedWithoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3303_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3303_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3303_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5",
          "withoutMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5",
          "linkedWithoutMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)3581_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)3581_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)3581_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3567_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3567_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "ee94f028f5d4e7a340f5dddedfbe6f215c6c973e5920369882450c885c05c3af",
          "withoutMetadata": "cd94f805fb1e6e26d3baca83cbc4c8916640dbc283573152626604bc9f16d846",
          "linkedWithoutMetadata": "cd94f805fb1e6e26d3baca83cbc4c8916640dbc283573152626604bc9f16d846"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(uint256,uint256,uint256)",
          "updateRecipe(bool,uint256,uint256,uint256,uint256)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)3458",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)3751",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3034_storage)",
              "src": "contracts/Crafting.sol:22"
            },
            {
              "contract": "Crafting",
              "label": "recipeList",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/Crafting.sol:23"
            }
          ],
          "types": {
            "t_contract(Items)3458": {
              "label": "contract Items"
            },
            "t_contract(Tools)3751": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3034_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3034_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "enabled",
                  "type": "t_bool"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "withoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "linkedWithoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3300_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3300_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3300_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5",
          "withoutMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5",
          "linkedWithoutMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)3578_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)3578_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)3578_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3564_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3564_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:9",
        "version": {
          "withMetadata": "9b9bd3f75ac0752dd5ab5aed58e2e65ce727a38e6467a33309a04e78d29b0fe8",
          "withoutMetadata": "e11def776a7fd68a803810fe65a539c1f7a70db433928eb6c8dfff68b65f2b43",
          "linkedWithoutMetadata": "e11def776a7fd68a803810fe65a539c1f7a70db433928eb6c8dfff68b65f2b43"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "addRecipe(uint256,uint256,uint256)",
          "updateRecipe(bool,uint256,uint256,uint256,uint256)",
          "toggleRecipe(uint256)",
          "makeRecipe(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crafting",
            "src": "contracts/Crafting.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "itemsContract",
              "type": "t_contract(Items)3455",
              "src": "contracts/Crafting.sol:10"
            },
            {
              "contract": "Crafting",
              "label": "toolsContract",
              "type": "t_contract(Tools)3748",
              "src": "contracts/Crafting.sol:11"
            },
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:13"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3034_storage)",
              "src": "contracts/Crafting.sol:22"
            }
          ],
          "types": {
            "t_contract(Items)3455": {
              "label": "contract Items"
            },
            "t_contract(Tools)3748": {
              "label": "contract Tools"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3034_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3034_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "enabled",
                  "type": "t_bool"
                },
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenType",
                  "type": "t_uint256"
                }
              ]
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:10",
        "version": {
          "withMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "withoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31",
          "linkedWithoutMetadata": "8638006674b2d074ba7416c12539820747d7e05d3f424ca36317d058e397cc31"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "externalBurn(address,uint256,uint256)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:11"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3297_storage)",
              "src": "contracts/Items.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3297_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3297_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5",
          "withoutMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5",
          "linkedWithoutMetadata": "5440b84669feb877bdc1c9a3206bf983febe3feeeaeed4321d5ef9a075a2a2f5"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address,uint256,uint256)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)3575_storage)",
              "src": "contracts/Tools.sol:28"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)3575_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)3575_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "toolType",
                  "type": "t_uint256"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3561_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3561_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "1676211191eef5cef4c27149e74f5d2f7b772586876641f6327ab5a25195ab78",
          "withoutMetadata": "1676211191eef5cef4c27149e74f5d2f7b772586876641f6327ab5a25195ab78",
          "linkedWithoutMetadata": "1676211191eef5cef4c27149e74f5d2f7b772586876641f6327ab5a25195ab78"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)1945_storage)",
              "src": "contracts/Tools.sol:27"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)1945_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)1945_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1933_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1933_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:10",
        "version": {
          "withMetadata": "5f3f7f31a2fcbd7a9ca5f1b45aa243608da34a106364583c21669a9a44e863e8",
          "withoutMetadata": "5f3f7f31a2fcbd7a9ca5f1b45aa243608da34a106364583c21669a9a44e863e8",
          "linkedWithoutMetadata": "5f3f7f31a2fcbd7a9ca5f1b45aa243608da34a106364583c21669a9a44e863e8"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string,string)",
          "externalMint(address)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:11"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)1945_storage)",
              "src": "contracts/Tools.sol:27"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)1945_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)1945_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1933_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1933_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:9",
        "version": {
          "withMetadata": "76290f779b94c3a31f8514380d8818d2b944e7d550c424427d06f34f553fb5f9",
          "withoutMetadata": "76290f779b94c3a31f8514380d8818d2b944e7d550c424427d06f34f553fb5f9",
          "linkedWithoutMetadata": "76290f779b94c3a31f8514380d8818d2b944e7d550c424427d06f34f553fb5f9"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:10"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)1863_storage)",
              "src": "contracts/Tools.sol:26"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)1863_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)1863_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)1851_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)1851_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:9",
        "version": {
          "withMetadata": "3eb41242979dc2851584e77044dc72c68ad562825e4cb926e657e135feb77c68",
          "withoutMetadata": "3eb41242979dc2851584e77044dc72c68ad562825e4cb926e657e135feb77c68",
          "linkedWithoutMetadata": "3eb41242979dc2851584e77044dc72c68ad562825e4cb926e657e135feb77c68"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:10"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3123_storage)",
              "src": "contracts/Items.sol:18"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3123_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3123_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:9",
        "version": {
          "withMetadata": "15857d47ec41e46766f3f3680d413a60c6b7e2111b9de7f325c66ddbbc35a111",
          "withoutMetadata": "15857d47ec41e46766f3f3680d413a60c6b7e2111b9de7f325c66ddbbc35a111",
          "linkedWithoutMetadata": "15857d47ec41e46766f3f3680d413a60c6b7e2111b9de7f325c66ddbbc35a111"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address)",
          "getMetadata(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:10"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)3380_storage)",
              "src": "contracts/Tools.sol:26"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)3380_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)3380_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                },
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3368_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Bonuses)3368_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:7",
        "version": {
          "withMetadata": "59322fa981e0d2ef0c81a3a763eb484b48bd86d0f00e17fdb3cfb1e3e10dee44",
          "withoutMetadata": "dde0a5c53b92ecb9b71936f46c5fa7180532caa6e7fd607691b45b08b6c8d87d",
          "linkedWithoutMetadata": "dde0a5c53b92ecb9b71936f46c5fa7180532caa6e7fd607691b45b08b6c8d87d"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addRecipe(uint256,uint256,uint256,uint256)",
          "updateRecipe(uint256,uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:8"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3026_storage)",
              "src": "contracts/Crafting.sol:17"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3026_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3026_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "outputAmount",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:9",
        "version": {
          "withMetadata": "7c7229fca563c307f401fde7ed954af0aded8dc77e335816eeb66c3f6bff158d",
          "withoutMetadata": "7c7229fca563c307f401fde7ed954af0aded8dc77e335816eeb66c3f6bff158d",
          "linkedWithoutMetadata": "7c7229fca563c307f401fde7ed954af0aded8dc77e335816eeb66c3f6bff158d"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:10"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3216_storage)",
              "src": "contracts/Items.sol:18"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3216_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3216_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:9",
        "version": {
          "withMetadata": "6a2b660848a434f2953603c9f4074907ef14b93d30160b08ef152138cd0108e0",
          "withoutMetadata": "70a50394ce04aee8be937246950141f5212d031a7f2b769976e12590d53ac06b",
          "linkedWithoutMetadata": "70a50394ce04aee8be937246950141f5212d031a7f2b769976e12590d53ac06b"
        },
        "inherit": [
          "ExternalActor",
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "externalMint(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:10"
            },
            {
              "contract": "Tools",
              "label": "_toolDetails",
              "type": "t_mapping(t_uint256,t_struct(Tool)3467_storage)",
              "src": "contracts/Tools.sol:23"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Tool)3467_storage)": {
              "label": "mapping(uint256 => struct Tools.Tool)"
            },
            "t_struct(Tool)3467_storage": {
              "label": "struct Tools.Tool",
              "members": [
                {
                  "label": "speed",
                  "type": "t_uint256"
                },
                {
                  "label": "bonuses",
                  "type": "t_struct(Bonuses)3461_storage"
                }
              ]
            },
            "t_struct(Bonuses)3461_storage": {
              "label": "struct Tools.Bonuses",
              "members": [
                {
                  "label": "stone",
                  "type": "t_uint256"
                },
                {
                  "label": "iron",
                  "type": "t_uint256"
                },
                {
                  "label": "gold",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:9",
        "version": {
          "withMetadata": "8b669c4bd3b9f82d8a7e1004e73d7b8960e133d9f4de7891b3b9ca8f7974ffee",
          "withoutMetadata": "8b669c4bd3b9f82d8a7e1004e73d7b8960e133d9f4de7891b3b9ca8f7974ffee",
          "linkedWithoutMetadata": "8b669c4bd3b9f82d8a7e1004e73d7b8960e133d9f4de7891b3b9ca8f7974ffee"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "String"
        ],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "getMetadata(uint256)",
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:10"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)1833_storage)",
              "src": "contracts/Items.sol:18"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)1833_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)1833_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "String": {
        "src": "contracts/String.sol:5",
        "version": {
          "withMetadata": "d63c978d88db917a858a38c5222975e33137b273a0e4ef51bbfb99cfbd1935a3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:8",
        "version": {
          "withMetadata": "6a49fd2a1935c004fba998b97f2737266534640977b3ae9b15a1484a016a3bd5",
          "withoutMetadata": "6a49fd2a1935c004fba998b97f2737266534640977b3ae9b15a1484a016a3bd5",
          "linkedWithoutMetadata": "6a49fd2a1935c004fba998b97f2737266534640977b3ae9b15a1484a016a3bd5"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "getTokenUri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:9"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)1832_storage)",
              "src": "contracts/Items.sol:17"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)1832_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)1832_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:8",
        "version": {
          "withMetadata": "bb49b8d2b2c366948843eb898d9dbd81c5c34581ab9f7210ab7a40213f287fc6",
          "withoutMetadata": "bb49b8d2b2c366948843eb898d9dbd81c5c34581ab9f7210ab7a40213f287fc6",
          "linkedWithoutMetadata": "bb49b8d2b2c366948843eb898d9dbd81c5c34581ab9f7210ab7a40213f287fc6"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "getTokenUri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:9"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)1832_storage)",
              "src": "contracts/Items.sol:17"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)1832_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)1832_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:8",
        "version": {
          "withMetadata": "0f799f2061961b9cdab11e0de7894f0f235c07d2a36cb419811aaa165a23bb44",
          "withoutMetadata": "00419397d376149992d365a53f9e92e79eb0a412c9da23d6a90f7a9b11fcfc96",
          "linkedWithoutMetadata": "00419397d376149992d365a53f9e92e79eb0a412c9da23d6a90f7a9b11fcfc96"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:9"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:7",
        "version": {
          "withMetadata": "91cffdd5faa7ed5b1ebeeb527d79a0fb43ac7a82a34d7cd792df61dea4897fa9",
          "withoutMetadata": "838124e1f765c470fc9a9d14abea0b313eece935a70ea3288004298d5052f6f0",
          "linkedWithoutMetadata": "838124e1f765c470fc9a9d14abea0b313eece935a70ea3288004298d5052f6f0"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:8"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3597_storage)",
              "src": "contracts/Crafting.sol:17"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3597_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3597_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "outputAmount",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:8",
        "version": {
          "withMetadata": "0f799f2061961b9cdab11e0de7894f0f235c07d2a36cb419811aaa165a23bb44",
          "withoutMetadata": "00419397d376149992d365a53f9e92e79eb0a412c9da23d6a90f7a9b11fcfc96",
          "linkedWithoutMetadata": "00419397d376149992d365a53f9e92e79eb0a412c9da23d6a90f7a9b11fcfc96"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:9"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:8",
        "version": {
          "withMetadata": "fe89949b987c818f90fbcdea04d0d5a6c89d1965651971ab3d28f9afd9dfdfcb",
          "withoutMetadata": "e65d71155e08c9a1ac2e88655f6fdcc2ce68ece169b6d982c202bcd539f659e5",
          "linkedWithoutMetadata": "e65d71155e08c9a1ac2e88655f6fdcc2ce68ece169b6d982c202bcd539f659e5"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "getTokenUri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:9"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3764_storage)",
              "src": "contracts/Items.sol:17"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3764_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3764_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:8",
        "version": {
          "withMetadata": "bee97d0342704d0147b3c8ca1769ff28ed2fdebc496ab4f614e06a7a345cc8aa",
          "withoutMetadata": "65d716ef6f5650f623f08769c62c6f3314420e2abdfc89d3163e7e13922714fe",
          "linkedWithoutMetadata": "65d716ef6f5650f623f08769c62c6f3314420e2abdfc89d3163e7e13922714fe"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:9"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}