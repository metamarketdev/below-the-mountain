{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:8",
        "version": {
          "withMetadata": "0f799f2061961b9cdab11e0de7894f0f235c07d2a36cb419811aaa165a23bb44",
          "withoutMetadata": "00419397d376149992d365a53f9e92e79eb0a412c9da23d6a90f7a9b11fcfc96",
          "linkedWithoutMetadata": "00419397d376149992d365a53f9e92e79eb0a412c9da23d6a90f7a9b11fcfc96"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:9"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "abdc309c156aec8c8807a9616185acc6f56580a7999f07fc68b0c5db5ba7e993",
          "withoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43",
          "linkedWithoutMetadata": "0c377555c21d45f7804c56096819fc3be66b1a63919587a1f9c98bdc7c62ed43"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "a97fdfac5856d5b750e1ccf806d2eeec3e2d3206c5ff4c13f33733e931f2d2dd",
          "withoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78",
          "linkedWithoutMetadata": "b924a240666455f37cce7c566fd462ba56daaed4d4baee92e754e74ea7a70c78"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "0bf2a9fbc777693b0ff2a5f9f93907aafdb87496e48297387c56cfc39c172357",
          "withoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a",
          "linkedWithoutMetadata": "70977498d16b815ee5dd506c5fc144cf47d1ea395de68eaf0ae06311db02ba3a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88d29f51c754fa2ea44c90d06a298c71c9f2a321623d181b0e245e05c78fb313",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "d2a3f928a281e25f3899d02589bc3b4ff810ff0d8c1f260315f1a10dca16f194",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Crafting": {
        "src": "contracts/Crafting.sol:7",
        "version": {
          "withMetadata": "91cffdd5faa7ed5b1ebeeb527d79a0fb43ac7a82a34d7cd792df61dea4897fa9",
          "withoutMetadata": "838124e1f765c470fc9a9d14abea0b313eece935a70ea3288004298d5052f6f0",
          "linkedWithoutMetadata": "838124e1f765c470fc9a9d14abea0b313eece935a70ea3288004298d5052f6f0"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Crafting.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Crafting",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Crafting.sol:8"
            },
            {
              "contract": "Crafting",
              "label": "_recipeDetails",
              "type": "t_mapping(t_uint256,t_struct(Recipe)3597_storage)",
              "src": "contracts/Crafting.sol:17"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Recipe)3597_storage)": {
              "label": "mapping(uint256 => struct Crafting.Recipe)"
            },
            "t_struct(Recipe)3597_storage": {
              "label": "struct Crafting.Recipe",
              "members": [
                {
                  "label": "inputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "inputAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "outputTokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "outputAmount",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ExternalActor": {
        "src": "contracts/ExternalActor.sol:6",
        "version": {
          "withMetadata": "c7fae03bb30c4b3bb6edc8058a3952280b54cbac4a3682ed62e57be976cfe032",
          "withoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa",
          "linkedWithoutMetadata": "380c80c98e65cf0256de645d6e1af8def434529ce6c76c7a0066cab42f6620fa"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "authorize(address,bool,bool)",
          "lockActors()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/ExternalActor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ExternalActor",
              "label": "allowedMinters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:7"
            },
            {
              "contract": "ExternalActor",
              "label": "allowedBurners",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ExternalActor.sol:8"
            },
            {
              "contract": "ExternalActor",
              "label": "locked",
              "type": "t_bool",
              "src": "contracts/ExternalActor.sol:10"
            }
          ],
          "types": {
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Gold": {
        "src": "contracts/Gold.sol:8",
        "version": {
          "withMetadata": "0f799f2061961b9cdab11e0de7894f0f235c07d2a36cb419811aaa165a23bb44",
          "withoutMetadata": "00419397d376149992d365a53f9e92e79eb0a412c9da23d6a90f7a9b11fcfc96",
          "linkedWithoutMetadata": "00419397d376149992d365a53f9e92e79eb0a412c9da23d6a90f7a9b11fcfc96"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Gold",
            "src": "contracts/Gold.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/Gold.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Gold",
              "label": "maxSupply",
              "type": "t_uint256",
              "src": "contracts/Gold.sol:9"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Items": {
        "src": "contracts/Items.sol:8",
        "version": {
          "withMetadata": "fe89949b987c818f90fbcdea04d0d5a6c89d1965651971ab3d28f9afd9dfdfcb",
          "withoutMetadata": "e65d71155e08c9a1ac2e88655f6fdcc2ce68ece169b6d982c202bcd539f659e5",
          "linkedWithoutMetadata": "e65d71155e08c9a1ac2e88655f6fdcc2ce68ece169b6d982c202bcd539f659e5"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "addItem(string,string,string)",
          "getTokenUri(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Items",
            "src": "contracts/Items.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Items.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Items",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Items.sol:9"
            },
            {
              "contract": "Items",
              "label": "_itemDetails",
              "type": "t_mapping(t_uint256,t_struct(Item)3764_storage)",
              "src": "contracts/Items.sol:17"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Item)3764_storage)": {
              "label": "mapping(uint256 => struct Items.Item)"
            },
            "t_struct(Item)3764_storage": {
              "label": "struct Items.Item",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "description",
                  "type": "t_string_storage"
                },
                {
                  "label": "image",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Tools": {
        "src": "contracts/Tools.sol:8",
        "version": {
          "withMetadata": "bee97d0342704d0147b3c8ca1769ff28ed2fdebc496ab4f614e06a7a345cc8aa",
          "withoutMetadata": "65d716ef6f5650f623f08769c62c6f3314420e2abdfc89d3163e7e13922714fe",
          "linkedWithoutMetadata": "65d716ef6f5650f623f08769c62c6f3314420e2abdfc89d3163e7e13922714fe"
        },
        "inherit": [
          "Withdrawable",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tools",
            "src": "contracts/Tools.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextId",
            "src": "contracts/Tools.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Tools",
              "label": "nextId",
              "type": "t_uint256",
              "src": "contracts/Tools.sol:9"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Withdrawable": {
        "src": "contracts/Withdrawable.sol:7",
        "version": {
          "withMetadata": "a21aa54711c294c2610ebdfe1613b0f5127a0af805578d54148f401009ec2862",
          "withoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f",
          "linkedWithoutMetadata": "5fa572815a6d8c3855553d03887e722e753d297116b05f14cfa877cf5c2af55f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "withdraw(address payable)",
          "withdrawToken(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}